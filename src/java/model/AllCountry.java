package model;
// Generated Feb 9, 2016 11:32:40 AM by Hibernate Tools 4.3.1


import java.util.Date;
import java.util.HashSet;
import java.util.Set;
import javax.persistence.Column;
import javax.persistence.Entity;
import javax.persistence.FetchType;
import javax.persistence.GeneratedValue;
import static javax.persistence.GenerationType.IDENTITY;
import javax.persistence.Id;
import javax.persistence.JoinColumn;
import javax.persistence.ManyToOne;
import javax.persistence.OneToMany;
import javax.persistence.Table;
import javax.persistence.Temporal;
import javax.persistence.TemporalType;

/**
 * AllCountry generated by hbm2java
 */
@Entity
@Table(name="all_country"
    ,catalog="vxsee"
)
public class AllCountry  implements java.io.Serializable {


     private Integer countryId;
     private ConLife conLife;
     private ConUser conUserByWritebyId;
     private ConUser conUserByCreatebyId;
     private String countryCode;
     private String countryName;
     private Date createdt;
     private Date writedt;
     private Set<ConCompany> conCompanies = new HashSet<ConCompany>(0);
     private Set<CrmCustomer> crmCustomers = new HashSet<CrmCustomer>(0);

    public AllCountry() {
    }

	
    public AllCountry(ConLife conLife) {
        this.conLife = conLife;
    }
    public AllCountry(ConLife conLife, ConUser conUserByWritebyId, ConUser conUserByCreatebyId, String countryCode, String countryName, Date createdt, Date writedt, Set<ConCompany> conCompanies, Set<CrmCustomer> crmCustomers) {
       this.conLife = conLife;
       this.conUserByWritebyId = conUserByWritebyId;
       this.conUserByCreatebyId = conUserByCreatebyId;
       this.countryCode = countryCode;
       this.countryName = countryName;
       this.createdt = createdt;
       this.writedt = writedt;
       this.conCompanies = conCompanies;
       this.crmCustomers = crmCustomers;
    }
   
     @Id @GeneratedValue(strategy=IDENTITY)

    
    @Column(name="country_id", unique=true, nullable=false)
    public Integer getCountryId() {
        return this.countryId;
    }
    
    public void setCountryId(Integer countryId) {
        this.countryId = countryId;
    }

@ManyToOne(fetch=FetchType.LAZY)
    @JoinColumn(name="life", nullable=false)
    public ConLife getConLife() {
        return this.conLife;
    }
    
    public void setConLife(ConLife conLife) {
        this.conLife = conLife;
    }

@ManyToOne(fetch=FetchType.LAZY)
    @JoinColumn(name="writeby_id")
    public ConUser getConUserByWritebyId() {
        return this.conUserByWritebyId;
    }
    
    public void setConUserByWritebyId(ConUser conUserByWritebyId) {
        this.conUserByWritebyId = conUserByWritebyId;
    }

@ManyToOne(fetch=FetchType.LAZY)
    @JoinColumn(name="createby_id")
    public ConUser getConUserByCreatebyId() {
        return this.conUserByCreatebyId;
    }
    
    public void setConUserByCreatebyId(ConUser conUserByCreatebyId) {
        this.conUserByCreatebyId = conUserByCreatebyId;
    }

    
    @Column(name="country_code", length=50)
    public String getCountryCode() {
        return this.countryCode;
    }
    
    public void setCountryCode(String countryCode) {
        this.countryCode = countryCode;
    }

    
    @Column(name="country_name", length=50)
    public String getCountryName() {
        return this.countryName;
    }
    
    public void setCountryName(String countryName) {
        this.countryName = countryName;
    }

    @Temporal(TemporalType.TIMESTAMP)
    @Column(name="createdt", length=19)
    public Date getCreatedt() {
        return this.createdt;
    }
    
    public void setCreatedt(Date createdt) {
        this.createdt = createdt;
    }

    @Temporal(TemporalType.TIMESTAMP)
    @Column(name="writedt", length=19)
    public Date getWritedt() {
        return this.writedt;
    }
    
    public void setWritedt(Date writedt) {
        this.writedt = writedt;
    }

@OneToMany(fetch=FetchType.LAZY, mappedBy="allCountry")
    public Set<ConCompany> getConCompanies() {
        return this.conCompanies;
    }
    
    public void setConCompanies(Set<ConCompany> conCompanies) {
        this.conCompanies = conCompanies;
    }

@OneToMany(fetch=FetchType.LAZY, mappedBy="allCountry")
    public Set<CrmCustomer> getCrmCustomers() {
        return this.crmCustomers;
    }
    
    public void setCrmCustomers(Set<CrmCustomer> crmCustomers) {
        this.crmCustomers = crmCustomers;
    }




}


