package model;
// Generated Feb 9, 2016 11:32:40 AM by Hibernate Tools 4.3.1


import java.math.BigDecimal;
import java.util.Date;
import javax.persistence.Column;
import javax.persistence.Entity;
import javax.persistence.FetchType;
import javax.persistence.GeneratedValue;
import static javax.persistence.GenerationType.IDENTITY;
import javax.persistence.Id;
import javax.persistence.JoinColumn;
import javax.persistence.ManyToOne;
import javax.persistence.Table;
import javax.persistence.Temporal;
import javax.persistence.TemporalType;

/**
 * ItemCustomPrices generated by hbm2java
 */
@Entity
@Table(name="item_custom_prices"
    ,catalog="vxsee"
)
public class ItemCustomPrices  implements java.io.Serializable {


     private Integer itemCustomPricesId;
     private ConCompany conCompany;
     private ConLife conLife;
     private ConUser conUserByWritebyId;
     private ConUser conUserByCreatebyId;
     private CrmCustomer crmCustomer;
     private Item item;
     private BigDecimal percentageDiscount;
     private BigDecimal percentageInterest;
     private Date effectiveFrom;
     private Date effectiveTo;
     private Date createdt;
     private Date writedt;

    public ItemCustomPrices() {
    }

	
    public ItemCustomPrices(ConLife conLife, CrmCustomer crmCustomer, Item item, BigDecimal percentageDiscount, BigDecimal percentageInterest, Date effectiveFrom, Date effectiveTo) {
        this.conLife = conLife;
        this.crmCustomer = crmCustomer;
        this.item = item;
        this.percentageDiscount = percentageDiscount;
        this.percentageInterest = percentageInterest;
        this.effectiveFrom = effectiveFrom;
        this.effectiveTo = effectiveTo;
    }
    public ItemCustomPrices(ConCompany conCompany, ConLife conLife, ConUser conUserByWritebyId, ConUser conUserByCreatebyId, CrmCustomer crmCustomer, Item item, BigDecimal percentageDiscount, BigDecimal percentageInterest, Date effectiveFrom, Date effectiveTo, Date createdt, Date writedt) {
       this.conCompany = conCompany;
       this.conLife = conLife;
       this.conUserByWritebyId = conUserByWritebyId;
       this.conUserByCreatebyId = conUserByCreatebyId;
       this.crmCustomer = crmCustomer;
       this.item = item;
       this.percentageDiscount = percentageDiscount;
       this.percentageInterest = percentageInterest;
       this.effectiveFrom = effectiveFrom;
       this.effectiveTo = effectiveTo;
       this.createdt = createdt;
       this.writedt = writedt;
    }
   
     @Id @GeneratedValue(strategy=IDENTITY)

    
    @Column(name="item_custom_prices_id", unique=true, nullable=false)
    public Integer getItemCustomPricesId() {
        return this.itemCustomPricesId;
    }
    
    public void setItemCustomPricesId(Integer itemCustomPricesId) {
        this.itemCustomPricesId = itemCustomPricesId;
    }

@ManyToOne(fetch=FetchType.LAZY)
    @JoinColumn(name="company_id")
    public ConCompany getConCompany() {
        return this.conCompany;
    }
    
    public void setConCompany(ConCompany conCompany) {
        this.conCompany = conCompany;
    }

@ManyToOne(fetch=FetchType.LAZY)
    @JoinColumn(name="life", nullable=false)
    public ConLife getConLife() {
        return this.conLife;
    }
    
    public void setConLife(ConLife conLife) {
        this.conLife = conLife;
    }

@ManyToOne(fetch=FetchType.LAZY)
    @JoinColumn(name="writeby_id")
    public ConUser getConUserByWritebyId() {
        return this.conUserByWritebyId;
    }
    
    public void setConUserByWritebyId(ConUser conUserByWritebyId) {
        this.conUserByWritebyId = conUserByWritebyId;
    }

@ManyToOne(fetch=FetchType.LAZY)
    @JoinColumn(name="createby_id")
    public ConUser getConUserByCreatebyId() {
        return this.conUserByCreatebyId;
    }
    
    public void setConUserByCreatebyId(ConUser conUserByCreatebyId) {
        this.conUserByCreatebyId = conUserByCreatebyId;
    }

@ManyToOne(fetch=FetchType.LAZY)
    @JoinColumn(name="customer_id", nullable=false)
    public CrmCustomer getCrmCustomer() {
        return this.crmCustomer;
    }
    
    public void setCrmCustomer(CrmCustomer crmCustomer) {
        this.crmCustomer = crmCustomer;
    }

@ManyToOne(fetch=FetchType.LAZY)
    @JoinColumn(name="item_id", nullable=false)
    public Item getItem() {
        return this.item;
    }
    
    public void setItem(Item item) {
        this.item = item;
    }

    
    @Column(name="percentage_discount", nullable=false, precision=10, scale=4)
    public BigDecimal getPercentageDiscount() {
        return this.percentageDiscount;
    }
    
    public void setPercentageDiscount(BigDecimal percentageDiscount) {
        this.percentageDiscount = percentageDiscount;
    }

    
    @Column(name="percentage_interest", nullable=false, precision=10, scale=4)
    public BigDecimal getPercentageInterest() {
        return this.percentageInterest;
    }
    
    public void setPercentageInterest(BigDecimal percentageInterest) {
        this.percentageInterest = percentageInterest;
    }

    @Temporal(TemporalType.DATE)
    @Column(name="effective_from", nullable=false, length=10)
    public Date getEffectiveFrom() {
        return this.effectiveFrom;
    }
    
    public void setEffectiveFrom(Date effectiveFrom) {
        this.effectiveFrom = effectiveFrom;
    }

    @Temporal(TemporalType.DATE)
    @Column(name="effective_to", nullable=false, length=10)
    public Date getEffectiveTo() {
        return this.effectiveTo;
    }
    
    public void setEffectiveTo(Date effectiveTo) {
        this.effectiveTo = effectiveTo;
    }

    @Temporal(TemporalType.TIMESTAMP)
    @Column(name="createdt", length=19)
    public Date getCreatedt() {
        return this.createdt;
    }
    
    public void setCreatedt(Date createdt) {
        this.createdt = createdt;
    }

    @Temporal(TemporalType.TIMESTAMP)
    @Column(name="writedt", length=19)
    public Date getWritedt() {
        return this.writedt;
    }
    
    public void setWritedt(Date writedt) {
        this.writedt = writedt;
    }




}


