package model;
// Generated Feb 16, 2016 7:40:44 PM by Hibernate Tools 4.3.1


import java.util.Date;
import java.util.HashSet;
import java.util.Set;
import javax.persistence.Column;
import javax.persistence.Entity;
import javax.persistence.FetchType;
import javax.persistence.GeneratedValue;
import static javax.persistence.GenerationType.IDENTITY;
import javax.persistence.Id;
import javax.persistence.JoinColumn;
import javax.persistence.ManyToOne;
import javax.persistence.OneToMany;
import javax.persistence.Table;
import javax.persistence.Temporal;
import javax.persistence.TemporalType;

/**
 * Bank generated by hbm2java
 */
@Entity
@Table(name="bank"
    ,catalog="vxsee"
)
public class Bank  implements java.io.Serializable {


     private Integer bankId;
     private ConCompany conCompany;
     private ConLife conLife;
     private ConUser conUserByWritebyId;
     private ConUser conUserByCreatebyId;
     private String bankCode;
     private String bankName;
     private String description;
     private String comments;
     private String primaryMobileNo;
     private String otherMobileNo;
     private String primaryLandline;
     private String otherLandline;
     private String primaryEmail;
     private String otherEmail;
     private String boxAddress;
     private String boxAddressCode;
     private String boxAddressTown;
     private String physicalAddress;
     private Date createdt;
     private Date writedt;
     private Set<Branch> branches = new HashSet<Branch>(0);
     private Set<FinReceipt> finReceipts = new HashSet<FinReceipt>(0);
     private Set<BankAccount> bankAccounts = new HashSet<BankAccount>(0);

    public Bank() {
    }

    public Bank(ConCompany conCompany, ConLife conLife, ConUser conUserByWritebyId, ConUser conUserByCreatebyId, String bankCode, String bankName, String description, String comments, String primaryMobileNo, String otherMobileNo, String primaryLandline, String otherLandline, String primaryEmail, String otherEmail, String boxAddress, String boxAddressCode, String boxAddressTown, String physicalAddress, Date createdt, Date writedt, Set<Branch> branches, Set<FinReceipt> finReceipts, Set<BankAccount> bankAccounts) {
       this.conCompany = conCompany;
       this.conLife = conLife;
       this.conUserByWritebyId = conUserByWritebyId;
       this.conUserByCreatebyId = conUserByCreatebyId;
       this.bankCode = bankCode;
       this.bankName = bankName;
       this.description = description;
       this.comments = comments;
       this.primaryMobileNo = primaryMobileNo;
       this.otherMobileNo = otherMobileNo;
       this.primaryLandline = primaryLandline;
       this.otherLandline = otherLandline;
       this.primaryEmail = primaryEmail;
       this.otherEmail = otherEmail;
       this.boxAddress = boxAddress;
       this.boxAddressCode = boxAddressCode;
       this.boxAddressTown = boxAddressTown;
       this.physicalAddress = physicalAddress;
       this.createdt = createdt;
       this.writedt = writedt;
       this.branches = branches;
       this.finReceipts = finReceipts;
       this.bankAccounts = bankAccounts;
    }
   
     @Id @GeneratedValue(strategy=IDENTITY)

    
    @Column(name="bank_id", unique=true, nullable=false)
    public Integer getBankId() {
        return this.bankId;
    }
    
    public void setBankId(Integer bankId) {
        this.bankId = bankId;
    }

@ManyToOne(fetch=FetchType.LAZY)
    @JoinColumn(name="company_id")
    public ConCompany getConCompany() {
        return this.conCompany;
    }
    
    public void setConCompany(ConCompany conCompany) {
        this.conCompany = conCompany;
    }

@ManyToOne(fetch=FetchType.LAZY)
    @JoinColumn(name="life")
    public ConLife getConLife() {
        return this.conLife;
    }
    
    public void setConLife(ConLife conLife) {
        this.conLife = conLife;
    }

@ManyToOne(fetch=FetchType.LAZY)
    @JoinColumn(name="writeby_id")
    public ConUser getConUserByWritebyId() {
        return this.conUserByWritebyId;
    }
    
    public void setConUserByWritebyId(ConUser conUserByWritebyId) {
        this.conUserByWritebyId = conUserByWritebyId;
    }

@ManyToOne(fetch=FetchType.LAZY)
    @JoinColumn(name="createby_id")
    public ConUser getConUserByCreatebyId() {
        return this.conUserByCreatebyId;
    }
    
    public void setConUserByCreatebyId(ConUser conUserByCreatebyId) {
        this.conUserByCreatebyId = conUserByCreatebyId;
    }

    
    @Column(name="bank_code", length=50)
    public String getBankCode() {
        return this.bankCode;
    }
    
    public void setBankCode(String bankCode) {
        this.bankCode = bankCode;
    }

    
    @Column(name="bank_name", length=50)
    public String getBankName() {
        return this.bankName;
    }
    
    public void setBankName(String bankName) {
        this.bankName = bankName;
    }

    
    @Column(name="description", length=50)
    public String getDescription() {
        return this.description;
    }
    
    public void setDescription(String description) {
        this.description = description;
    }

    
    @Column(name="comments", length=50)
    public String getComments() {
        return this.comments;
    }
    
    public void setComments(String comments) {
        this.comments = comments;
    }

    
    @Column(name="primary_mobile_no", length=50)
    public String getPrimaryMobileNo() {
        return this.primaryMobileNo;
    }
    
    public void setPrimaryMobileNo(String primaryMobileNo) {
        this.primaryMobileNo = primaryMobileNo;
    }

    
    @Column(name="other_mobile_no", length=50)
    public String getOtherMobileNo() {
        return this.otherMobileNo;
    }
    
    public void setOtherMobileNo(String otherMobileNo) {
        this.otherMobileNo = otherMobileNo;
    }

    
    @Column(name="primary_landline", length=50)
    public String getPrimaryLandline() {
        return this.primaryLandline;
    }
    
    public void setPrimaryLandline(String primaryLandline) {
        this.primaryLandline = primaryLandline;
    }

    
    @Column(name="other_landline", length=50)
    public String getOtherLandline() {
        return this.otherLandline;
    }
    
    public void setOtherLandline(String otherLandline) {
        this.otherLandline = otherLandline;
    }

    
    @Column(name="primary_email", length=50)
    public String getPrimaryEmail() {
        return this.primaryEmail;
    }
    
    public void setPrimaryEmail(String primaryEmail) {
        this.primaryEmail = primaryEmail;
    }

    
    @Column(name="other_email", length=50)
    public String getOtherEmail() {
        return this.otherEmail;
    }
    
    public void setOtherEmail(String otherEmail) {
        this.otherEmail = otherEmail;
    }

    
    @Column(name="box_address", length=50)
    public String getBoxAddress() {
        return this.boxAddress;
    }
    
    public void setBoxAddress(String boxAddress) {
        this.boxAddress = boxAddress;
    }

    
    @Column(name="box_address_code", length=10)
    public String getBoxAddressCode() {
        return this.boxAddressCode;
    }
    
    public void setBoxAddressCode(String boxAddressCode) {
        this.boxAddressCode = boxAddressCode;
    }

    
    @Column(name="box_address_town", length=50)
    public String getBoxAddressTown() {
        return this.boxAddressTown;
    }
    
    public void setBoxAddressTown(String boxAddressTown) {
        this.boxAddressTown = boxAddressTown;
    }

    
    @Column(name="physical_address", length=50)
    public String getPhysicalAddress() {
        return this.physicalAddress;
    }
    
    public void setPhysicalAddress(String physicalAddress) {
        this.physicalAddress = physicalAddress;
    }

    @Temporal(TemporalType.TIMESTAMP)
    @Column(name="createdt", length=19)
    public Date getCreatedt() {
        return this.createdt;
    }
    
    public void setCreatedt(Date createdt) {
        this.createdt = createdt;
    }

    @Temporal(TemporalType.TIMESTAMP)
    @Column(name="writedt", length=19)
    public Date getWritedt() {
        return this.writedt;
    }
    
    public void setWritedt(Date writedt) {
        this.writedt = writedt;
    }

@OneToMany(fetch=FetchType.LAZY, mappedBy="bank")
    public Set<Branch> getBranches() {
        return this.branches;
    }
    
    public void setBranches(Set<Branch> branches) {
        this.branches = branches;
    }

@OneToMany(fetch=FetchType.LAZY, mappedBy="bank")
    public Set<FinReceipt> getFinReceipts() {
        return this.finReceipts;
    }
    
    public void setFinReceipts(Set<FinReceipt> finReceipts) {
        this.finReceipts = finReceipts;
    }

@OneToMany(fetch=FetchType.LAZY, mappedBy="bank")
    public Set<BankAccount> getBankAccounts() {
        return this.bankAccounts;
    }
    
    public void setBankAccounts(Set<BankAccount> bankAccounts) {
        this.bankAccounts = bankAccounts;
    }




}


