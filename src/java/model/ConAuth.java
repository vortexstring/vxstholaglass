package model;
// Generated Feb 9, 2016 11:32:40 AM by Hibernate Tools 4.3.1


import java.util.Date;
import javax.persistence.Column;
import javax.persistence.Entity;
import javax.persistence.FetchType;
import javax.persistence.GeneratedValue;
import static javax.persistence.GenerationType.IDENTITY;
import javax.persistence.Id;
import javax.persistence.JoinColumn;
import javax.persistence.ManyToOne;
import javax.persistence.Table;
import javax.persistence.Temporal;
import javax.persistence.TemporalType;

/**
 * ConAuth generated by hbm2java
 */
@Entity
@Table(name="con_auth"
    ,catalog="vxsee"
)
public class ConAuth  implements java.io.Serializable {


     private Integer authId;
     private AllStatus allStatus;
     private ConCompany conCompany;
     private ConLife conLife;
     private ConProfiles conProfiles;
     private ConUser conUserByUserId;
     private ConUser conUserByCreatebyId;
     private ConUser conUserByWritebyId;
     private String username;
     private String password;
     private String loginKey;
     private Integer branchId;
     private Date createdt;
     private Date writedt;

    public ConAuth() {
    }

	
    public ConAuth(AllStatus allStatus, ConLife conLife, String username, String password) {
        this.allStatus = allStatus;
        this.conLife = conLife;
        this.username = username;
        this.password = password;
    }
    public ConAuth(AllStatus allStatus, ConCompany conCompany, ConLife conLife, ConProfiles conProfiles, ConUser conUserByUserId, ConUser conUserByCreatebyId, ConUser conUserByWritebyId, String username, String password, String loginKey, Integer branchId, Date createdt, Date writedt) {
       this.allStatus = allStatus;
       this.conCompany = conCompany;
       this.conLife = conLife;
       this.conProfiles = conProfiles;
       this.conUserByUserId = conUserByUserId;
       this.conUserByCreatebyId = conUserByCreatebyId;
       this.conUserByWritebyId = conUserByWritebyId;
       this.username = username;
       this.password = password;
       this.loginKey = loginKey;
       this.branchId = branchId;
       this.createdt = createdt;
       this.writedt = writedt;
    }
   
     @Id @GeneratedValue(strategy=IDENTITY)

    
    @Column(name="auth_id", unique=true, nullable=false)
    public Integer getAuthId() {
        return this.authId;
    }
    
    public void setAuthId(Integer authId) {
        this.authId = authId;
    }

@ManyToOne(fetch=FetchType.LAZY)
    @JoinColumn(name="status_id", nullable=false)
    public AllStatus getAllStatus() {
        return this.allStatus;
    }
    
    public void setAllStatus(AllStatus allStatus) {
        this.allStatus = allStatus;
    }

@ManyToOne(fetch=FetchType.LAZY)
    @JoinColumn(name="company_id")
    public ConCompany getConCompany() {
        return this.conCompany;
    }
    
    public void setConCompany(ConCompany conCompany) {
        this.conCompany = conCompany;
    }

@ManyToOne(fetch=FetchType.LAZY)
    @JoinColumn(name="life", nullable=false)
    public ConLife getConLife() {
        return this.conLife;
    }
    
    public void setConLife(ConLife conLife) {
        this.conLife = conLife;
    }

@ManyToOne(fetch=FetchType.LAZY)
    @JoinColumn(name="profile_id")
    public ConProfiles getConProfiles() {
        return this.conProfiles;
    }
    
    public void setConProfiles(ConProfiles conProfiles) {
        this.conProfiles = conProfiles;
    }

@ManyToOne(fetch=FetchType.LAZY)
    @JoinColumn(name="user_id")
    public ConUser getConUserByUserId() {
        return this.conUserByUserId;
    }
    
    public void setConUserByUserId(ConUser conUserByUserId) {
        this.conUserByUserId = conUserByUserId;
    }

@ManyToOne(fetch=FetchType.LAZY)
    @JoinColumn(name="createby_id")
    public ConUser getConUserByCreatebyId() {
        return this.conUserByCreatebyId;
    }
    
    public void setConUserByCreatebyId(ConUser conUserByCreatebyId) {
        this.conUserByCreatebyId = conUserByCreatebyId;
    }

@ManyToOne(fetch=FetchType.LAZY)
    @JoinColumn(name="writeby_id")
    public ConUser getConUserByWritebyId() {
        return this.conUserByWritebyId;
    }
    
    public void setConUserByWritebyId(ConUser conUserByWritebyId) {
        this.conUserByWritebyId = conUserByWritebyId;
    }

    
    @Column(name="username", nullable=false, length=200)
    public String getUsername() {
        return this.username;
    }
    
    public void setUsername(String username) {
        this.username = username;
    }

    
    @Column(name="password", nullable=false, length=200)
    public String getPassword() {
        return this.password;
    }
    
    public void setPassword(String password) {
        this.password = password;
    }

    
    @Column(name="login_key", length=50)
    public String getLoginKey() {
        return this.loginKey;
    }
    
    public void setLoginKey(String loginKey) {
        this.loginKey = loginKey;
    }

    
    @Column(name="branch_id")
    public Integer getBranchId() {
        return this.branchId;
    }
    
    public void setBranchId(Integer branchId) {
        this.branchId = branchId;
    }

    @Temporal(TemporalType.TIMESTAMP)
    @Column(name="createdt", length=19)
    public Date getCreatedt() {
        return this.createdt;
    }
    
    public void setCreatedt(Date createdt) {
        this.createdt = createdt;
    }

    @Temporal(TemporalType.TIMESTAMP)
    @Column(name="writedt", length=19)
    public Date getWritedt() {
        return this.writedt;
    }
    
    public void setWritedt(Date writedt) {
        this.writedt = writedt;
    }




}


